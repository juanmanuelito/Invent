<?php

namespace inventarioBundle\Repository;
use Doctrine\ORM\EntityRepository;
/**
 * TabInventSalidaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class TabInventSalidaRepository extends \Doctrine\ORM\EntityRepository {
	public function numberOfStuff($codAlmacen, $codProduct){
		$var = $this->getEntityManager()
		            ->createQuery(
			"SELECT sum(a.canProduct) cuantity FROM inventarioBundle:TabInventEntrada a
				 WHERE
					a.Almacen = :almacen AND
					a.Producto = :producto "
		)->setParameter('almacen', $codAlmacen)
		 ->setParameter('producto', $codProduct)
		 ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
		 echo var_dump($var);
		$var1 = $this->getEntityManager()
		            ->createQuery(
			"SELECT sum(a.cantidad) cuantity FROM inventarioBundle:TSalidaLog a
				 WHERE
					a.codProduc = :almacen AND
					a.codAlmacen = :producto "
		)->setParameter('almacen', $codAlmacen)
		 ->setParameter('producto', $codProduct)
		 ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
		 echo var_dump($var1);
		return $var[0]['cuantity']-$var1[0]['cuantity'];
	}


	public function getProducCuantity($codAlmacen, $codProduct) {
		return $this->getEntityManager()
		            ->createQuery(
			"SELECT sum(a.canProduct) FROM inventarioBundle:TabInventEntrada a
				 WHERE
					a.Almacen = :almacen AND
					a.Producto = :producto "
		)->setParameter('almacen', $codAlmacen)
		 ->setParameter('producto', $codProduct)
		 ->getResult();
	}
	public function getSalidaValue($codAlmacen, $codProduct, $cantidad) {
		$valCan = $cantidad;
		$val    = $this->getEntityManager()
		            ->createQuery(
			"SELECT a.canProduct cant,a.valEntrada valor FROM inventarioBundle:TabInventEntrada a
				 WHERE
					a.Almacen = :almacen AND
					a.Producto = :producto 
				ORDER BY a.fecCreaci ASC "
		)->setParameter('almacen', $codAlmacen)
		 ->setParameter('producto', $codProduct)
		 ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
		$response = array();
		$number   = 0;
		for ($i = 0; $i < count($val); $i++) {
			if ($val[$i]['cant'] > $valCan) {
				$number += $val[$i]['valor']*$valCan;
				break;
			} else {
				$number += $val[$i]['valor']*$val[$i]['cant'];
				$valCan -= $val[$i]['cant'];
			}
		}
		return round($number/$cantidad, 2);
	}
	public function getSalidas($codAlmacen, $codProduct, $cantidad) {

		$valCan = $cantidad;
		$val    = $this->getEntityManager()
		            ->createQuery(
			"SELECT a FROM inventarioBundle:TabInventEntrada a
				 WHERE
					a.Almacen = :almacen AND
					a.Producto = :producto
				ORDER BY a.fecCreaci ASC "
		)->setParameter('almacen', $codAlmacen)
		 ->setParameter('producto', $codProduct)
		 ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
		$response = array();
		$number   = null;
		for ($i = 0; $i < count($val); $i++) {
			if ($val[$i]['canProduct'] > $valCan) {
				$number[] = $val[$i];
				break;
			} else {
				$number[] = $val[$i];
				$valCan -= $val[$i]['canProduct'];
			}
		}
		return $number;
	}
}
